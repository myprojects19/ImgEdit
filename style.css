body {
    font-family: sans-serif;
    margin: 0;
    background-color: #f4f4f4;
    color: #333;
    transition: background-color 0.3s, color 0.3s;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    padding: 20px;
}

/* Dark Mode */
body.dark-mode {
    background-color: #1e1e1e;
    color: #eee;
}

body.dark-mode .controls-panel {
    background-color: #2a2a2a;
    color: #eee;
    border-color: #555;
}

body.dark-mode button,
body.dark-mode .upload-button {
    background-color: #555;
    color: #eee;
    border-color: #666;
}

body.dark-mode button:hover,
body.dark-mode .upload-button:hover {
    background-color: #666;
}

body.dark-mode button.active,
body.dark-mode .tab-button.active {
     background-color: #007bff; /* Or a dark-mode friendly accent */
     color: white;
     border-color: #007bff;
}

body.dark-mode input[type="text"],
body.dark-mode input[type="range"]::-webkit-slider-thumb,
body.dark-mode select {
    background-color: #444;
    color: #eee;
    border-color: #666;
}
body.dark-mode input[type="color"] {
    background-color: #444; /* May not affect appearance significantly */
}

body.dark-mode .drop-area {
    border-color: #666;
    background-color: #3a3a3a;
    color: #ccc;
}
body.dark-mode .drop-area.dragover {
    background-color: #4a4a4a;
    border-color: #007bff;
}

body.dark-mode .canvas-placeholder {
    color: #bbb;
}

/* Editor Layout */
.editor-container {
    display: flex;
    width: 100%;
    max-width: 1200px;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    border-radius: 8px;
    overflow: hidden;
}

body.dark-mode .editor-container {
    background-color: #2a2a2a;
    box-shadow: 0 0 10px rgba(0,0,0,0.3);
}

.controls-panel {
    width: 300px;
    padding: 20px;
    background-color: #f9f9f9;
    border-right: 1px solid #eee;
    display: flex;
    flex-direction: column;
    overflow-y: auto; /* Make controls scrollable if needed */
}

.canvas-area {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Hide overflow from canvas wrapper */
    position: relative; /* Needed for positioning canvas wrapper */
}

.canvas-wrapper {
    position: relative; /* For positioning overlays */
    max-width: 100%; /* Prevent wrapper from exceeding canvas area */
    max-height: 100%; /* Prevent wrapper from exceeding canvas area */
     /* Allow canvas to overflow wrapper if zoomed, requiring manual panning/scrolling in the canvas-area */
     /* For this basic version, we just center the canvas */
}


#editorCanvas {
    display: block; /* Remove extra space below canvas */
    max-width: 100%; /* Canvas responsiveness */
    max-height: 100%; /* Canvas responsiveness */
}

.canvas-placeholder {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #999;
    pointer-events: none; /* Don't block clicks */
    text-align: center;
}

/* Controls Styling */
.controls-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    border-bottom: 1px solid #eee;
    padding-bottom: 10px;
}
body.dark-mode .controls-header {
     border-bottom-color: #555;
}

.upload-section {
    margin-bottom: 20px;
    text-align: center;
}

#imageUpload {
    display: none; /* Hide default file input */
}

.upload-button {
    display: inline-block;
    background-color: #007bff;
    color: white;
    padding: 10px 15px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s;
    margin-bottom: 10px;
}

.upload-button:hover {
    background-color: #0056b3;
}

.drop-area {
    border: 2px dashed #ccc;
    border-radius: 4px;
    padding: 20px;
    text-align: center;
    color: #777;
    cursor: pointer;
    transition: background-color 0.3s, border-color 0.3s;
}

.drop-area.dragover {
    background-color: #e9e9e9;
    border-color: #007bff;
}

.controls-tabs {
    display: flex;
    margin-bottom: 15px;
    border-bottom: 1px solid #eee;
    overflow-x: auto; /* Allow tabs to scroll horizontally */
}
.controls-tabs::-webkit-scrollbar {
    display: none; /* Hide scrollbar */
}

.tab-button {
    flex-shrink: 0; /* Prevent shrinking */
    padding: 10px 15px;
    border: none;
    background-color: transparent;
    cursor: pointer;
    border-bottom: 2px solid transparent;
    transition: border-bottom-color 0.3s, color 0.3s;
    margin-right: 5px;
    color: #555;
}

.tab-button:hover {
     color: #333;
}

.tab-button.active {
    border-bottom-color: #007bff;
    color: #007bff;
    font-weight: bold;
}
body.dark-mode .tab-button.active {
     border-bottom-color: #007bff; /* Use same accent */
     color: #007bff;
}
body.dark-mode .tab-button:hover {
    color: #eee;
}
body.dark-mode .tab-button {
    color: #aaa;
}


.controls-content {
    flex-grow: 1; /* Allow content to fill space */
}

.tab-content {
    display: none;
}

.tab-content.active {
    display: block;
}

.tab-content h3 {
    margin-top: 0;
    margin-bottom: 15px;
    border-bottom: 1px solid #eee;
    padding-bottom: 5px;
}
body.dark-mode .tab-content h3 {
    border-bottom-color: #555;
}

/* Specific Control Groups */
.filter-btn {
    margin: 5px;
    padding: 8px 12px;
    cursor: pointer;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: #eee;
    transition: background-color 0.2s;
}

.filter-btn:hover {
    background-color: #ddd;
}

.tab-content label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.tab-content input[type="text"],
.tab-content input[type="color"],
.tab-content select,
.tab-content input[type="range"] {
    display: block;
    width: calc(100% - 12px); /* Account for padding */
    margin-bottom: 15px;
    padding: 6px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box; /* Include padding/border in element's total width/height */
}
.tab-content input[type="range"] {
    width: calc(100% - 50px); /* Adjust for span next to it */
    display: inline-block;
    vertical-align: middle;
}
.tab-content input[type="range"] + span {
    display: inline-block;
    vertical-align: middle;
    margin-left: 5px;
    font-size: 0.9em;
}

.sticker-gallery {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 15px;
}

.sticker-option {
    width: 40px;
    height: 40px;
    border: 1px solid #ccc;
    border-radius: 4px;
    cursor: pointer;
    padding: 5px;
    transition: transform 0.2s, border-color 0.2s;
    box-sizing: border-box;
}

.sticker-option:hover {
    transform: scale(1.1);
    border-color: #007bff;
}

.download-section {
    margin-top: 20px;
    padding-top: 15px;
    border-top: 1px solid #eee;
    text-align: center;
}
body.dark-mode .download-section {
    border-top-color: #555;
}

.download-section button {
    margin: 5px;
    padding: 10px 15px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.download-section button:hover {
    background-color: #218838;
}
body.dark-mode .download-section button {
    background-color: #4CAF50;
}
body.dark-mode .download-section button:hover {
     background-color: #388E3C;
}


/* Overlay Elements (for text, stickers, crop guide) */
.overlay-element {
    position: absolute;
    pointer-events: auto; /* Allow interaction */
    user-select: none; /* Prevent selecting text */
    box-sizing: border-box;
}

.overlay-element.hidden {
    display: none;
}

/* Text Overlay */
.text-overlay {
    cursor: grab;
    white-space: nowrap; /* Prevent text wrapping */
    padding: 5px; /* Add padding for easier grabbing */
    outline: 1px dashed #007bff; /* Visual indicator */
    font-family: inherit; /* Will be set by JS */
    font-size: inherit; /* Will be set by JS */
    color: inherit; /* Will be set by JS */
    /* Text overlay handles drag, text rendering happens on canvas on apply */
}
.text-overlay:active {
    cursor: grabbing;
}

/* Sticker Overlay */
.sticker-overlay {
    cursor: grab;
    outline: 1px dashed #007bff; /* Visual indicator */
    display: flex; /* Center image inside */
    justify-content: center;
    align-items: center;
    /* Sticker overlay handles drag, image rendering happens on canvas on apply */
}
.sticker-overlay img {
    display: block; /* Remove extra space below image */
    max-width: 100%;
    max-height: 100%;
    pointer-events: none; /* Don't interfere with parent drag */
}
.sticker-overlay:active {
    cursor: grabbing;
}


/* Crop Overlay */
.crop-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    cursor: crosshair; /* Indicate selection */
    background-color: rgba(0, 0, 0, 0.5); /* Dark overlay */
    pointer-events: auto; /* Needs to capture mouse events */
}

.crop-overlay::before {
    content: '';
    position: absolute;
    top: var(--crop-y, 0);
    left: var(--crop-x, 0);
    width: var(--crop-width, 100%);
    height: var(--crop-height, 100%);
    outline: 2px solid #007bff; /* Crop selection border */
    box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.5); /* Darken outside selection */
    box-sizing: border-box;
    pointer-events: none; /* Don't interfere with dragging corners/sides */
}

/* Crop handles (simplified - corners only) */
.crop-corner {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #007bff;
    border: 1px solid white;
    box-sizing: border-box;
    pointer-events: auto; /* Needs to be draggable */
    cursor: nwse-resize; /* Default diagonal cursor */
    z-index: 10; /* Above the overlay */
}

.crop-corner.top-left { top: var(--crop-y, 0); left: var(--crop-x, 0); cursor: nwse-resize; }
.crop-corner.top-right { top: var(--crop-y, 0); left: calc(var(--crop-x, 0) + var(--crop-width, 100%)); cursor: nesw-resize; }
.crop-corner.bottom-left { top: calc(var(--crop-y, 0) + var(--crop-height, 100%)); left: var(--crop-x, 0); cursor: nesw-resize; }
.crop-corner.bottom-right { top: calc(var(--crop-y, 0) + var(--crop-height, 100%)); left: calc(var(--crop-x, 0) + var(--crop-width, 100%)); cursor: nwse-resize; }

/* Optional: Side handles */
.crop-side {
     position: absolute;
     width: 10px;
     height: 10px; /* Placeholder - size is determined by --crop-vars */
     background-color: transparent; /* Handles are invisible, only cursor matters */
     pointer-events: auto;
     z-index: 5; /* Below corners */
}
.crop-side.top { top: var(--crop-y, 0); left: calc(var(--crop-x, 0) + 10px); width: calc(var(--crop-width, 100%) - 20px); height: 10px; cursor: ns-resize; }
.crop-side.bottom { top: calc(var(--crop-y, 0) + var(--crop-height, 100%)); left: calc(var(--crop-x, 0) + 10px); width: calc(var(--crop-width, 100%) - 20px); height: 10px; cursor: ns-resize; }
.crop-side.left { top: calc(var(--crop-y, 0) + 10px); left: var(--crop-x, 0); width: 10px; height: calc(var(--crop-height, 100%) - 20px); cursor: ew-resize; }
.crop-side.right { top: calc(var(--crop-y, 0) + 10px); left: calc(var(--crop-x, 0) + var(--crop-width, 100%)); width: 10px; height: calc(var(--crop-height, 100%) - 20px); cursor: ew-resize; }


/* Responsive adjustment - controls stack above canvas on small screens */
@media (max-width: 768px) {
    .editor-container {
        flex-direction: column;
        padding: 10px;
    }
    .controls-panel {
        width: 100%;
        border-right: none;
        border-bottom: 1px solid #eee;
        padding: 10px;
        order: -1; /* Place controls above canvas */
    }
     body.dark-mode .controls-panel {
         border-bottom-color: #555;
     }
    .canvas-area {
        width: 100%;
        height: auto; /* Adjust height based on content */
        padding: 10px 0;
    }
    .tab-button {
        font-size: 0.9em;
        padding: 8px 10px;
    }
     .controls-tabs {
         margin-bottom: 10px;
         padding-bottom: 5px;
     }
    .controls-header {
        margin-bottom: 10px;
    }
    .upload-section, .download-section {
        margin-bottom: 10px;
        padding-top: 10px;
    }
}